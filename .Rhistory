1+1
df<-read.csv("C:/wb/repdata/repdata-data-StormData.csv")
save(df, "c:/wb/repdata/test")
save(df, "c:/wb/repdata/test.csv")
df.save( "c:/wb/repdata/test.csv")
save( "c:/wb/repdata/test.csv")
save(list = df, file = "c:/wb/repdata/test.csv")
df
df.head()
head(df)
sum(df$BGN_TIME)
str(df)
sum(df$F)
sum(df$F, na.rm = True)
sum(df$F, na.rm = true)
sum(df$F, na.rm = T)
f<- download.file( 'https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip' )
setwd("C:\wb\repdata\RepData_PeerAssessment1")
setwd("C:/wb/repdata/RepData_PeerAssessment1")
f<- download.file( 'https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip' )
f<- download.file(url = 'https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip' , destfile = "data")
unzip("activity.zip")
f<- download.file(url = 'https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip' , destfile = "activity.zip")
f
unzip("activity.zip")
a<-unzip("activity.zip")
a
dfActivity <- read.csv ( file = srcfile)
srcfile
f<- download.file(url = 'https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip' , destfile = "activity.zip")
srcfile<-unzip("activity.zip")
srcfile
f<- download.file(url = 'https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip' , destfile = "activity.zip")
activity.filename <-unzip("activity.zip")
dfActivity <- read.csv ( file = activity.filename)
dfActivity
dfActivity.head()
head(dfActivity)
hist( data=dfActivity)
table( steps, date, data=dfActivity)
table( dfActivity$steps , dfActivity$date)
table( dfActivity$date, dfActivity$steps  )
install.packages('reshape')
cast(a)
library(reshape)
dfActivity.perday <- aggregate( date~steps, data = dfActivity, fun=SUM)
dfActivity.perday <- aggregate( date~steps, data = dfActivity,FUN = =sum)
dfActivity.perday <- aggregate( date~steps, data = dfActivity,FUN  =sum)
dfActivity.perday <- aggregate( date~steps, data = dfActivity,FUN  =sum)
str(dfActivity)
dfActivity.perday <- aggregate( steps~date, data = dfActivity,FUN  =sum)
dfActivity.perday
hist(dfActivity.perday)
hist(dfActivity.perday$steps)
hist(dfActivity.perday$steps , breaks = 50 )
mean(dfActivity.perday$steps)
median(dfActivity.perday$steps)
setwd("c:/wb/repdata/RepData_PeerAssessment1")
dfActivity <- read.csv ( file = "c:/wb/repdata/RepData_PeerAssessment1/activity.csv")
if (!file.exists("./activity.csv"))
{
f<- download.file(url = 'http://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip' , destfile = "activity.zip")
activity.filename <-unzip("./activity.zip")
}
dfActivity <- read.csv ( file = "./activity.csv")
dfActivity.perinterval <- aggregate( steps~interval, data = dfActivity,FUN  =sum)
dfActivity.perinterval <- aggregate( steps~interval, data = dfActivity,FUN  =average)
dfActivity.perinterval <- aggregate( steps~interval, data = dfActivity,FUN  =avg)
dfActivity.perinterval <- aggregate( steps~interval, data = dfActivity,FUN  =mean)
plot( y=steps , x=interval , type="l", data=dfActivity.perinterval )
plot( y=steps , x=interval , type="l", data=dfActivity.perinterval )
plot( y=dfActivity.perinterval$steps , x=dfActivity.perinterval$interval , type="l", data=dfActivity.perinterval )
plot( y=dfActivity.perinterval$steps , x=dfActivity.perinterval$interval , type="l", data=dfActivity.perinterval , col="b")
plot( y=dfActivity.perinterval$steps , x=dfActivity.perinterval$interval , type="l", data=dfActivity.perinterval , col="blue"")
plot( y=dfActivity.perinterval$steps , x=dfActivity.perinterval$interval , type="l", data=dfActivity.perinterval , col="blue")
plot( y=dfActivity.perinterval$steps , x=dfActivity.perinterval$interval , type="l", data=dfActivity.perinterval , col="blue")
plot( y=dfActivity.perinterval$steps , x=dfActivity.perinterval$interval , type="l",  col="blue")
maxNumStepsInAInterval <- max( dfActivity.perinterval$steps )
maxNumStepsInAInterval
match( maxNumStepsInAInterval, dfActivity.perinterval)
match( maxNumStepsInAInterval, dfActivity.perinterval$steps)
match( maxNumStepsInAInterval, dfActivity.perinterval$interval)
match( maxNumStepsInAInterval, dfActivity.perinterval$steps)
maxNumStepsInAInterval[104]
maxNumStepsInAInterval[102]
maxNumStepsInAInterval[102,:]
maxNumStepsInAInterval[102]
maxNumStepsInAInterval
dfActivity.perinterval[102]
dfActivity.perinterval[102,:]
dfActivity.perinterval[102, 1]
dfActivity.perinterval[102, 2]
dfActivity.perinterval[103, 2]
dfActivity.perinterval[104, 2]
plot( y=dfActivity.perinterval$steps , x=dfActivity.perinterval$interval , type="l",  col="blue")
dfActivity.perinterva
dfActivity.perinterval
dfActivity.perinterval[104,:]
dfActivity.perinterval[104,]
maxNumStepsInAInterval       <- max( dfActivity.perinterval$steps )
maxNumStepsInAInterval.index <- match( maxNumStepsInAInterval, dfActivity.perinterval$steps)
dfActivity.perinterval[maxNumStepsInAInterval.index,]
tmpi
maxNumStepsInAInterval       <- max( dfActivity.perinterval$steps )
maxNumStepsInAInterval.index <- match( maxNumStepsInAInterval, dfActivity.perinterval$steps)
tmpi<-dfActivity.perinterval[maxNumStepsInAInterval.index,]$interval
tmpi
totalNaNRows <- count( is.na( dfActivity$steps) )
totalNaNRows <- is.na( dfActivity$steps)
totalNaNRows
sum(totalNaNRows)
msk <- is.na(dfActivity$steps)
msk
dfActivity[msk, ]
dfActivity[msk, ]$interval
dfActivity[msk, ]$interval
a<-dfActivity[msk, ]$interval
a
head(a)
dfActivity[msk, ]
dfActivity[msk, ]$interval
merge( dfActivity[msk, ] , dfActivity.perinterval )
dfActivity[msk, ]
m1 <- merge(dfActivity[msk, ] , dfActivity.perinterval , books, by.x = "interval", by.y = "interval")
m1
m1$steps.x
m1$steps.y
m1$steps.y
dfActivity.NAfixed <- dfActivity
dfActivity.NAfixed <- dfActivity
msk <- is.na(dfActivity$steps)  #the mask for the rows that have NA result
m1 <- merge(dfActivity[msk, ] , dfActivity.perinterval , books, by.x = "interval", by.y = "interval") #Get the average for the intervals that are NA
dfActivity.NAfixed[msk, ]$steps <- m1$steps.y
dfActivity
dfActivity.NAFixed.perday <- aggregate( steps~date, data = dfActivity.NAfixed ,FUN  =sum)
hist(dfActivity.NAFixed.perday$steps , breaks = 50 )
dfActivity.NAFixed.perday <- aggregate( steps~date, data = dfActivity.NAfixed ,FUN  =sum)
hist(dfActivity.NAFixed.perday$steps , breaks = 50 )
hist(dfActivity.NAFixed.perday$steps , breaks = 50 )
impact <- dfActivity.NAFixed.perday -  dfActivity.perday
impact <- dfActivity.NAFixed.perday$date -  dfActivity.perday$date
impact <- dfActivity.NAFixed.perday -  dfActivity.perday
dfActivity.NAFixed.perday
dfActivity.perday
impact <- merge( dfActivity.NAFixed.perday ,   dfActivity.perday)
impact
impact <- merge( dfActivity.NAFixed.perday ,   dfActivity.perday,all.x = True)
impact <- merge( dfActivity.NAFixed.perday ,   dfActivity.perday,all.x = TRUE)
impact
impact <- merge( dfActivity.NAFixed.perday ,   dfActivity.perday,all.x = TRUE , all.y = TRUE)
impact
impact <- merge( dfActivity.NAFixed.perday ,   dfActivity.perday , all=TRUE)
merge( dfActivity.NAFixed.perday ,   dfActivity.perday , all=TRUE)
dfActivity.perday
dfActivity.NAFixed.perday
impact <- merge( dfActivity.NAFixed.perday ,   dfActivity.perday ,  by.x = "date", by.y = "date", all=TRUE)
impact
dfActivity.perday <- aggregate( steps~date, data = dfActivity,FUN  =sum )
dfActivity.perday
impact
mean(dfActivity.NAfixed.perday$steps)
median(dfActivity.NAfixed.perday$steps)
dfActivity.NAFixed.perday <- aggregate( steps~date, data = dfActivity.NAfixed ,FUN  =sum)
mean(dfActivity.NAfixed.perday$steps)
dfActivity.NAFixed.perday
mean( dfActivity.NAFixed.perday$steps)
median(dfActivity.NAFixed.perday$steps)
meanImpact<-mean( dfActivity.NAFixed.perday$steps) - mean(dfActivity.perday$steps)
mediaImpact<-median(dfActivity.NAFixed.perday$steps) - median(dfActivity.perday$steps)
meanImpact
mediaImpact
weekdays(dfActivity$date)
dfActivity$date
weekdays(dfActivity$date)
weekdays( as.Date( dfActivity$date) )
weekdays( as.Date( dfActivity$date) ) in ("Sunday" , "Saturday")
weekdays( as.Date( dfActivity$date) )
weekdays( as.Date( dfActivity$date) ) %in% c("Sunday" , "Saturday" )
if( weekdays( as.Date( dfActivity$date) ) %in% c("Sunday" , "Saturday" ) , "weekday" , "weekend" )
weekdays( as.Date( dfActivity$date) ) %in% c("Sunday" , "Saturday" )
if ( weekdays( as.Date( dfActivity$date) ) %in% c("Sunday" , "Saturday" )  == TRUE, "weekday" , "weekend" )
weekdays( as.Date( dfActivity$date) ) %in% c("Sunday" , "Saturday" )  == TRUE
mskIsWeekend = weekdays( as.Date( dfActivity$date) ) %in% c("Sunday" , "Saturday" )
mskIsWeekend = weekdays( as.Date( dfActivity.NAfixed$date) ) %in% c("Sunday" , "Saturday" )
dfActivity.NAfixed
dfActivity.NAfixed$daytype = factor("weekday")
dfActivity.NAfixed
dfActivity.NAfixed[mskIsWeekend, daytype ] = factor("weekend")
dfActivity.NAfixed[mskIsWeekend, "daytype"" ] = factor("weekend")
dfActivity.NAfixed[mskIsWeekend, ]$daytype = factor("weekend")
dfActivity.NAfixed$daytype = factor("weekday")
dfActivity.NAfixed[mskIsWeekend, ]$daytype = factor("weekend")
mskIsWeekend = weekdays( as.Date( dfActivity.NAfixed$date) ) %in% c("Sunday" , "Saturday" )
dfActivity.NAfixed$daytype = "weekday"
dfActivity.NAfixed[mskIsWeekend, ]$daytype = "weekend"
mskIsWeekend = weekdays( as.Date( dfActivity.NAfixed$date) ) %in% c("Sunday" , "Saturday" )
dfActivity.NAfixed$daytype = "weekday"
dfActivity.NAfixed[mskIsWeekend, ]$daytype = "weekend"
dfActivity.NAfixed$daytype = as.factor ( dfActivity.NAfixed$daytype )
dfActivity.NAfixed
str(dfActivity.NAfixed)
par(c(2,1))
par(mfrow=c(2,1))
par(mfrow=c(1,1))
dfActivity.NAfixed
aggregate ( steps~date + daytype ,  data=dfActivity.NAfixed)
aggregate ( steps~date + daytype ,  data=dfActivity.NAfixed , FUN=mean)
aggregate ( steps~ interval + daytype ,  data=dfActivity.NAfixed , FUN=mean)
aggSteps <- aggregate ( steps~ interval + daytype ,  data=dfActivity.NAfixed , FUN=mean)
aggSteps
aggSteps
str(aggSteps)
xyplot(steps~interval|daytype,
panel=panel.smoother,
xlab="Weight", ylab="Miles per Gallon",
main="MGP vs Weight by Horse Power" ,
data = aggSteps )
library(lattice)
xyplot(steps~interval|daytype,
panel=panel.smoother,
xlab="Weight", ylab="Miles per Gallon",
main="MGP vs Weight by Horse Power" ,
data = aggSteps )
xyplot(steps~interval|daytype,
xlab="Weight", ylab="Miles per Gallon",
main="MGP vs Weight by Horse Power" ,
data = aggSteps )
xyplot( steps~interval|daytype,
type = "l",
xlab="Interval", ylab="Average Steps Taken Per Interval",
main="Steps taken in each interval in the day, by day type" ,
data = aggSteps )
xyplot( steps~interval|daytype,
type = "l",
xlab="Interval", ylab="Average Steps Taken Per Interval",
main="Steps taken in each interval in the day, by day type" ,
horizontal = FALSE,
data = aggSteps
)
xyplot( steps~interval|daytype,
type = "l",
xlab="Interval", ylab="Average Steps Taken Per Interval",
main="Steps taken in each interval in the day, by day type" ,
horizontal = TRUE,
data = aggSteps
)
xyplot( steps~interval|daytype,
type = "l",
xlab="Interval", ylab="Average Steps Taken Per Interval",
main="Steps taken in each interval in the day, by day type" ,
layout = c(2, 1),
data = aggSteps
)
xyplot( steps~interval|daytype,
type = "l",
xlab="Interval", ylab="Average Steps Taken Per Interval",
main="Steps taken in each interval in the day, by day type" ,
layout=c(1, 2),
data = aggSteps
)
library(lattice)
